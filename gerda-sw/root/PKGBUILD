# Maintainer: Konstantin Gizdov < arch at kge dot pw >
# Contributor: Frank Siegert < frank.siegert at googlemail dot com >
# Contributor: Scott Lawrence < bytbox at gmail dot com >
# Contributor: Thomas Dziedzic < gostrc at gmail dot com >
# Contributor: Sebastian Voecking < voeck at web dot de >

pkgname=root
pkgver=6.18.04
pkgrel=10
pkgdesc='C++ data analysis framework and interpreter from CERN'
arch=('x86_64')
url='https://root.cern.ch'
license=('LGPL2.1')
makedepends=('ccache'
             'cern-vdt'
             'cfitsio'
             'cmake'
             'fcgi'
             'fftw'
             'ftgl'
             'blas'
             'giflib'
             'git'
             'gl2ps'
             'glew'
             'gsl'
             'libafterimage'
             'librsvg'
             'libxpm'
             'ocaml'
             'ocaml-ctypes'
             'openssl'
             'pythia8>=8.2.40-1'
             'python'
             'python-numpy'
             'sqlite'
             'tex-gyre-fonts'
             'vc'
             'xmlrpc-c'
             'xxhash>=0.6.5-1'
             'z3')
depends=('blas'
         'fcgi'
         'fftw'
         'ftgl'
         'giflib'
         'gl2ps'
         'glew'
         'graphviz'
         'gsl'
         'libafterimage'
         'librsvg'
         'libxpm'
         'tex-gyre-fonts'
         'unixodbc'
         'xxhash>=0.6.5-1')
optdepends=('cfitsio: Read images and data from FITS files'
            'cern-vdt: Add a set of fast and vectorisable mathematical functions'
            'libmariadbclient: MySQL support'
            'openssl: OpenSSL support'
            'postgresql-libs: PostgreSQL support'
            'pythia8>=8.2.40-1: Pythia8 EG support'
            'sqlite: SQLite support'
            'tcsh: Legacy CSH support'
            'unuran: Support non-uniform random numbers'
            'vc: Add types for portable and intuitive SIMD programming'
            'libxml2: XML parser interface'
            'xrootd: Support remote file server and client')
source=("https://root.cern.ch/download/root_v${pkgver}.source.tar.gz"
        'root.pc.tpl'
        'settings.cmake'
        'add_missing_include_ROOT-10315.patch')
sha256sums=('315a85fc8363f8eb1bffa0decbf126121258f79bd273513ed64795675485cfa4'
            'a0fc0c9404905f61fe8ba94e52ffbbefcdbcb198f2a577703b1924364a251395'
            'e2ad5ea35d8b8bfdd69eefc4ebf23632c1557a270101a6c1093af19d40c723ea'
            '1cb2654f22b5f1de7f8621434c76266968db77a1f300de857e47d0f4ad5da217')

get_pyver () {
    python -c 'import sys; print(str(sys.version_info[0]) + "." + str(sys.version_info[1]))'
}

prepare() {
    local src
    for src in "${source[@]}"; do
        src="${src%%::*}"
        src="${src##*/}"
        [[ $src = *.patch ]] || continue
        echo "  -> Applying patch $src..."
        patch -Np1 -i "../$src" -d "${srcdir}/${pkgname}-${pkgver}"
    done

    # don't let ROOT play around with lib paths
    sed -i -e 's@SetLibraryPath();@@g' \
        "${srcdir}/${pkgname}-${pkgver}/rootx/src/rootx.cxx"
}

build() {
    mkdir -p "${srcdir}/build"
    cd "${srcdir}/build"

    CFLAGS="${CFLAGS} -pthread" \
    CXXFLAGS="${CXXFLAGS} -pthread" \
    LDFLAGS="${LDFLAGS} -pthread -Wl,--no-undefined" \
    cmake -C "${srcdir}/settings.cmake" \
        -DTARGET_ARCHITECTURE:STRING=generic \
        -DPYTHON_EXECUTABLE:PATH=/usr/bin/python \
        -DINSTALL_PREFIX=/usr \
        "${srcdir}/${pkgname}-${pkgver}"

    cd "${srcdir}/build"
    make
}

package() {
    local bld_dir="${srcdir}/build"
    cd "${bld_dir}"

    make DESTDIR="${pkgdir}" install

    # fix python env call
    sed -e 's/@python@/python/' -i "${pkgdir}/usr/lib/root/cmdLineUtils.py"

    # try to deal with weird PyROOT, PyMVA and JupyROOT stuff
    rm -rf "${pkgdir}/usr/lib/root/__pycache__"
    local _pyver=$(get_pyver)
    local _pydir="${pkgdir}/usr/lib/python${_pyver}/site-packages"
    install -d "${_pydir}"
    find "${pkgdir}/usr/lib/root" -maxdepth 1 -mindepth 1 \( -iname "*py*" -or -name "*Js*" \) ! -name "*EGPythia8*" -print0 | while read -rd $'\0' _lib; do
        _base=$(basename "${_lib}")
        ln -sf "/usr/lib/root/${_base}" "${pkgdir}/usr/lib/python${_pyver}/site-packages/${_base}"
    done

    # recompile pycache to strip $pkgdir from embedded paths
    python -m compileall -d "/usr/lib/python${_pyver}" \
        "${pkgdir}/usr/lib/python${_pyver}"
    python -O -m compileall -d "/usr/lib/python${_pyver}" \
        "${pkgdir}/usr/lib/python${_pyver}"

    # use a file that pacman can track instead of adding directly to ld.so.conf
    install -d "${pkgdir}/etc/ld.so.conf.d"
    echo '/usr/lib/root' > "${pkgdir}/etc/ld.so.conf.d/root.conf"

    # create pkg-config file
    local _prefix _exec_prefix _bindir _libdir _incdir _pkg_ver _libs _cflags
    _prefix="$("${pkgdir}"/usr/bin/root-config --prefix)"
    _exec_prefix="$("${pkgdir}"/usr/bin/root-config --exec-prefix)"
    _bindir="$("${pkgdir}"/usr/bin/root-config --bindir)"
    _libdir="$("${pkgdir}"/usr/bin/root-config --libdir)"
    _incdir="$("${pkgdir}"/usr/bin/root-config --incdir)"
    _pkg_ver="$(sed -n 's,.*ROOT_RELEASE *\"\(.*\)\".*,\1,p' < "${pkgdir}"/usr/include/RVersion.h)"
    _libs="$("${pkgdir}"/usr/bin/root-config --libs)"
    _cflags="$("${pkgdir}"/usr/bin/root-config --cflags)"
    cp "${srcdir}/root.pc.tpl" "${bld_dir}"/
    sed -e "s@_PREFIX@${_prefix}@" -e "s@_EXECPREFIX@${_exec_prefix}@" \
        -e "s@_LIBDIR@${_libdir}@" -e "s@_INCDIR@${_incdir}@" \
        -e "s@_PKGVERSION@${_pkg_ver}@" -e "s@_LIBRARIES@${_libs}@" \
        -e "s@_CFLAGS@${_cflags}@" \
        -i "${bld_dir}/root.pc.tpl"
    install -Dm644 "${bld_dir}/root.pc.tpl" "${pkgdir}/usr/lib/pkgconfig/root.pc"

    # put CMake config in correct path and fix relative paths
    install -d "${pkgdir}/usr/lib/cmake/ROOT"
    mv "${pkgdir}/usr/share/root/cmake"/* "${pkgdir}/usr/lib/cmake/ROOT"/
    rm -rf "${pkgdir}/usr/share/root/cmake"
    sed -e "s@ROOT_INCLUDE_DIRS .*include\"@ROOT_INCLUDE_DIRS \"${_incdir}\"@" \
        -e "s@ROOT_LIBRARY_DIR .*lib/root\"@ROOT_LIBRARY_DIR \"${_libdir}\"@" \
        -e "s@ROOT_BINARY_DIR .*bin\"@ROOT_BINARY_DIR \"${_bindir}\"@" \
        -e 's@# ROOT configured for the install with relative paths, so use these@# ROOT was patched to use correct absolute paths, specifically these@g' \
        -i "${pkgdir}"/usr/lib/cmake/ROOT/ROOTConfig.cmake
    ln -sf "/usr/lib/root/cmake/cling" "${pkgdir}/usr/lib/cmake/ROOT/cling"
}
